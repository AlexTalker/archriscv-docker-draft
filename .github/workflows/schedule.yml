name: Scheduled images update
on:
  schedule:
    # At 00:00 on every Sunday
    - cron: 0 0 * * 0
  workflow_dispatch:

jobs:
  compute-version:
    name: Determine latest version
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.determine-release.outputs.release }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        id: determine-release
        name: Determine latest tarball
        run: |
          pip install beautifulsoup4
          echo "release=$(curl -L 'https://archriscv.felixc.at/images/' | python tools/scrapper.py | sed -e 's/archriscv-//' -e 's/.tar.zst//')" >> "$GITHUB_OUTPUT"

  image-exists:
    name: Determine if release image was published earlier
    needs:
      - compute-version
    runs-on: ubuntu-latest
    outputs:
      release: ${{ needs.compute-version.outputs.release }}
      present: ${{ steps.docker-hub-image.outputs.present }}
    steps:
      -
        id: docker-hub-image
        name: Determine if release image was already published
        env:
          IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/archriscv
          RELEASE: ${{ needs.compute-version.outputs.release }}
        run: |
          curl --silent -f -lSL https://hub.docker.com/v2/repositories/${{ env.IMAGE }}/tags/${{ env.RELEASE }} \
          && (echo "present=1" >> "$GITHUB_OUTPUT") \
          || (echo "present=0" >> "$GITHUB_OUTPUT")

  trigger-release:
    if: ${{ needs.image-exists.outputs.present == '0' }}
    needs:
      - compute-version
      - image-exists
    uses: ./.github/workflows/release.yml
    with:
      release: ${{ needs.compute-version.outputs.release }}
    secrets: inherit

  trigger-latest:
    if: ${{ success() || ((needs.compute-version.result == 'success') && (needs.trigger-release.result == 'skipped' )) }}
    needs:
      - compute-version
      - trigger-release
    uses: ./.github/workflows/latest.yml
    with:
      release: ${{ needs.compute-version.outputs.release }}
    secrets: inherit
